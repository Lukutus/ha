blueprint:
  name: Send Three Entities Data via MQTT
  description: This blueprint sends data from three entities via MQTT
  domain: automation
  input:
    entity_1:
      name: First Entity
      description: The first entity to monitor
      selector:
        entity:
          domain: sensor
    entity_2:
      name: Second Entity
      description: The second entity to monitor
      selector:
        entity:
          domain: sensor
    entity_3:
      name: Third Entity
      description: The third entity to monitor
      selector:
        entity:
          domain: sensor
    mqtt_broker:
      name: MQTT Broker
      description: The MQTT broker address
      selector:
        text:
    mqtt_port:
      name: MQTT Port
      description: The MQTT broker port
      default: 1883
      selector:
        number:
          min: 1
          max: 65535
    mqtt_username:
      name: MQTT Username
      description: The MQTT broker username
      selector:
        text:
    mqtt_password:
      name: MQTT Password
      description: The MQTT broker password
      selector:
        text:
    mqtt_topic:
      name: MQTT Topic
      description: The MQTT topic to publish data to
      selector:
        text:

trigger:
  - platform: state
    entity_id: !input entity_1
  - platform: state
    entity_id: !input entity_2
  - platform: state
    entity_id: !input entity_3

action:
  - service: mqtt.publish
    data:
      topic: !input mqtt_topic
      payload_template: >
        {
          "entity_1": "{{"text": "{{ states('<!input entity_1>') }}", "icon": "55909", "lifetime": "30" }}',
          "entity_2": "{{"text": "{{ states('<!input entity_2>') }}", "icon": "51856", "lifetime": "30" }}',
          "entity_3": "{{"text": "{{ states('<!input entity_3>') }}", "icon": "32930", "lifetime": "30" }}',
        }
      qos: 0
      retain: false
  - service: mqtt.publish
    data:
      topic: homeassistant/sensor/trigger
      payload: '{
          "entity_id": "{{ trigger.entity_id }}",
          "new_state": "{{ trigger.to_state.state }}"
        }'
      qos: 0
      retain: false
